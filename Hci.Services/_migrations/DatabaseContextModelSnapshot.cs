// <auto-generated />
using System;
using Hci.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hci.Services._migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hci.Models.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DocumentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("DocumentType")
                        .HasColumnType("tinyint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("LastName")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            CreatedById = 1,
                            DocumentId = "IR894256",
                            DocumentType = (byte)2,
                            FirstName = "John",
                            LastName = "Smith",
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            PersonId = 2,
                            CreatedById = 1,
                            DocumentId = "US97455881",
                            DocumentType = (byte)2,
                            FirstName = "Raegan",
                            LastName = "Gardner",
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            PersonId = 3,
                            CreatedById = 1,
                            DocumentType = (byte)1,
                            FirstName = "Kaylah",
                            LastName = "Wilkinson",
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Hci.Models.Security.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedById = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Hci.Models.Sites.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HospitalId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Hospitals", (string)null);

                    b.HasData(
                        new
                        {
                            HospitalId = 1,
                            CreatedById = 1,
                            Name = "Beacon Hospital",
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            HospitalId = 2,
                            CreatedById = 1,
                            Name = "Cavan General Hospital",
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Hci.Models.Visits.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VisitId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HospitalId");

                    b.HasIndex("PersonId");

                    b.ToTable("Visits", (string)null);

                    b.HasData(
                        new
                        {
                            VisitId = 1,
                            CreatedById = 1,
                            EntryDate = new DateTime(2023, 12, 31, 20, 0, 0, 0, DateTimeKind.Local),
                            ExitDate = new DateTime(2023, 12, 31, 21, 0, 0, 0, DateTimeKind.Local),
                            HospitalId = 1,
                            PersonId = 1,
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            VisitId = 2,
                            CreatedById = 1,
                            EntryDate = new DateTime(2024, 1, 1, 21, 0, 0, 0, DateTimeKind.Local),
                            ExitDate = new DateTime(2024, 1, 1, 21, 32, 0, 0, DateTimeKind.Local),
                            HospitalId = 1,
                            PersonId = 2,
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            VisitId = 3,
                            CreatedById = 1,
                            EntryDate = new DateTime(2024, 1, 1, 22, 0, 0, 0, DateTimeKind.Local),
                            ExitDate = new DateTime(2024, 1, 1, 22, 23, 0, 0, DateTimeKind.Local),
                            HospitalId = 1,
                            PersonId = 1,
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            VisitId = 4,
                            CreatedById = 1,
                            EntryDate = new DateTime(2024, 1, 1, 21, 0, 0, 0, DateTimeKind.Local),
                            ExitDate = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Local),
                            HospitalId = 2,
                            PersonId = 3,
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            VisitId = 5,
                            CreatedById = 1,
                            EntryDate = new DateTime(2024, 1, 3, 20, 0, 0, 0, DateTimeKind.Local),
                            ExitDate = new DateTime(2024, 1, 3, 20, 35, 0, 0, DateTimeKind.Local),
                            HospitalId = 1,
                            PersonId = 2,
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            VisitId = 8,
                            CreatedById = 1,
                            EntryDate = new DateTime(2024, 1, 3, 21, 0, 0, 0, DateTimeKind.Local),
                            ExitDate = new DateTime(2024, 1, 3, 21, 20, 0, 0, DateTimeKind.Local),
                            HospitalId = 2,
                            PersonId = 3,
                            RecordDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Hci.Models.Entities.Person", b =>
                {
                    b.HasOne("Hci.Models.Security.User", "User")
                        .WithMany("Persons")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hci.Models.Sites.Hospital", b =>
                {
                    b.HasOne("Hci.Models.Security.User", "User")
                        .WithMany("Hospitals")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hci.Models.Visits.Visit", b =>
                {
                    b.HasOne("Hci.Models.Security.User", "User")
                        .WithMany("Visits")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hci.Models.Sites.Hospital", "Hospital")
                        .WithMany("Visits")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hci.Models.Entities.Person", "Person")
                        .WithMany("Visits")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hospital");

                    b.Navigation("Person");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hci.Models.Entities.Person", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Hci.Models.Security.User", b =>
                {
                    b.Navigation("Hospitals");

                    b.Navigation("Persons");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Hci.Models.Sites.Hospital", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
